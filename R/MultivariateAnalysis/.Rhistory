crime3$Vehicle <- crime2$Vehicle/876
round(apply(crime3, 2, var), 4)
round(kmeans(crime3, centers = 2)$centers, 4)
out <- kmeans(crime3, centers = 2)
out
names(out)
out$cluster
kmeans(crime3, centers = 2)$size
table(kmeans(crime3, centers = 2)$cluster)
cereal <- read.table("cereal.txt")
cereal <- read.table("cereal.txt", header=F)
cereal <- read.table("cereal.txt", header=F, sep="")
cereal <- read.csv("cereal.csv", header=F)
head(cereal)
rownames <- c("Life", "Grape", "Super Sugar", "Special", "Rice Krisp", "Raisin B")
colnames <- c("Brand", "Protein", "Carb", "Fat", "Calory", "VitA")
cereal <- cereal[,-1]
head(cereal)
col.names(cereal) <- colnames
column.names(cereal) <- colnames
?colnames
col.name <- c("Brand", "Protein", "Carb", "Fat", "Calory", "VitA")
row.name <- c("Life", "Grape", "Super Sugar", "Special", "Rice Krisp", "Raisin B")
col.name <- c("Brand", "Protein", "Carb", "Fat", "Calory", "VitA")
colnames(cereal) <- col.name
rownames(cereal) <- row.name
row.name <- c("Life", "Grape", "SuperSugar", "SpecialK", "RiceKrisp", "RaisinBran", "Prod19", "Weaties", "Total", "PuffedRice", "SugarCornPops", "SugarSmacks")
rownames(cereal) <- row.name
head(cereal)
dm.cereal <-dist(cereal)
dm.cereal
plot(slc.cereal <- hclust(dm.cereal, method = "single"))
plot(clc.cereal <- hclust(dm.cereal, method = "complete"))
plot(avc.cereal <- hclust(dm.cereal, method = "average"))
round(kmeans(cereal, centers = 2)$centers, 4)
head(cereal)
cereal <- cereal[,-c(1, 2)] # dropping col 1
head(cereal)
cereal <- read.csv("cereal.csv", header=F)
head(cereal)
row.name <- c("Life", "Grape", "SuperSugar", "SpecialK", "RiceKrisp", "RaisinBran", "Prod19", "Weaties", "Total", "PuffedRice", "SugarCornPops", "SugarSmacks")
col.name <- c("Sl", "Brand", "Protein", "Carb", "Fat", "Calory", "VitA")
# Removing the first two columns from the data;
cereal <- cereal[,-c(1, 2)] # dropping col 1
head(cereal)
# Assign column names to ceral data object
colnames(cereal) <- col.name
colnames(cereal) <- col.name
cereal <- read.csv("cereal.csv", header=F)
head(cereal)
row.name <- c("Life", "Grape", "SuperSugar", "SpecialK", "RiceKrisp", "RaisinBran", "Prod19", "Weaties", "Total", "PuffedRice", "SugarCornPops", "SugarSmacks")
col.name <- c("Sl", "Brand", "Protein", "Carb", "Fat", "Calory", "VitA")
# Assign column names to ceral data object
colnames(cereal) <- col.name
rownames(cereal) <- row.name
head(cereal)
cereal <- cereal[,-c(1, 2)] # dropping col 1
head(cereal)
dm.cereal <-dist(cereal)
plot(slc.cereal <- hclust(dm.cereal, method = "single"))
# Single linkage
plot(clc.cereal <- hclust(dm.cereal, method = "complete"))
# Average linkage
plot(avc.cereal <- hclust(dm.cereal, method = "average"))
round(kmeans(cereal, centers = 2)$centers, 4)
kmeans(cereal, centers = 2)$centers
out <- kmeans(util, centers = 2)
out <- kmeans(cereal, centers = 2)
names(out)
out$centers
out$cluster
out$size
table(kmeans(cereal, centers = 2)$cluster)
kmeans(ceral, centers = 2)$size
kmeans(cereal, centers = 2)$size
table(kmeans(cereal, centers = 2)$cluster)
out$cluster
kmeans(cereal, centers=1)$centers
round(kmeans(cereal, centers = 5)$centers, 4)
sum(kmeans(cereal, centers = 2)$withinss)
sum(kmeans(cereal, centers = 3)$withinss)
sum(kmeans(cereal, centers = 4)$withinss)
wss <- rep(0, 6)
for (i in 1:6)
{
wss[i] <- sum(kmeans(util, centers = i)$withinss)
}
wss
wss <- rep(0, 6)
for (i in 1:6)
{
wss[i] <- sum(kmeans(cereal, centers = i)$withinss)
}
wss
plot(1:6, wss, type ="b", ylab = "Within-group SS", xlab = "Number of groups")
kmeans(cereal, centers = 2)$centers
table(kmeans(cereal, centers = 2)$cluster)
fit3 <- kmeans(cereal, centers = 3)
# 2 cluster solution
fit2 <- kmeans(cereal, centers = 2)
library(cluster)
clusplot(cereal, fit3$cluster, color=TRUE, shade=TRUE, labels=2, lines=0)
clusplot(cereal, fit2$cluster, color=TRUE, shade=TRUE, labels=2, lines=0)
fit <- kmeans(scale(cereal), centers=2)
clusplot(scale(cereal), fit$cluster, color=TRUE, shade=TRUE, labels=2, lines=0)
?clusplot
gpa <- read.table("admissn.dat")
head(gpa)
gpa <- gpa[, c(1:2)]
head(gpa)
fit <- kmeans(scale(gpa), centers=2)
clusplot(scale(gpa), fit$cluster, color=TRUE, shade=TRUE, labels=2, lines=0)
fit2 <- kmeans(scale(gpa), centers=2)
fit2 <- kmeans(scale(gpa), centers=2)
clusplot(scale(gpa), fit2$cluster, color=TRUE, shade=TRUE, labels=2, lines=0)
fit3 <- kmeans(scale(gpa), centers=3)
clusplot(scale(gpa), fit3$cluster, color=TRUE, shade=TRUE, labels=2, lines=0)
out <- kmeans(gpa, centers = 2)
names(out)
out$centers
out$cluster
table(kmeans(cereal, centers = 2)$cluster)
table(out$cluster)
out$cluster
gpa
gpa <- read.table("admissn.dat")
head(gpa)
gpa2 <- gpa[, c(1:2)]
head(gpa2)
colnames(gpa2) <- c("GPA", "GMAT")
fit2 <- kmeans(scale(gpa), centers=2)
clusplot(scale(gpa), fit2$cluster, color=TRUE, shade=TRUE, labels=2, lines=0)
fit3 <- kmeans(scale(gpa), centers=3)
clusplot(scale(gpa), fit3$cluster, color=TRUE, shade=TRUE, labels=2, lines=0)
out <- kmeans(gpa2, centers = 2)
names(out)
out$centers
# Showing the cluster that each data-row belongs to
out$cluster
# Showing the cluster sizes
table(out$cluster)
kmeans(cereal, centers=3)$centers
round(kmeans(gpa2, centers = 4)$centers, 4)
wss <- rep(0, 6)
for (i in 1:6)
{
wss[i] <- sum(kmeans(gpa2, centers = i)$withinss)
}
wss
plot(1:6, wss, type ="b", ylab = "Within-group SS", xlab = "Number of groups")
table(gpa[,3])
kmeans(gpa2, centers = 2)$centers
table(kmeans(gpa2, centers = 2)$cluster)
fit2 <- kmeans(gpa, centers=2)
fit2 <- kmeans(gpa2, centers=2)
fit2 <- kmeans(gpa2, centers=2)
clusplot(gpa2, fit2$cluster, color=TRUE, shade=TRUE, labels=2, lines=0)
fit3 <- kmeans(gpa2, centers=3)
clusplot(gpa2, fit3$cluster, color=TRUE, shade=TRUE, labels=2, lines=0)
fit3$cluster
gpa3 <- cbind(gpa2, gpa[,3], fit3$cluster)
gpa3
?as.dist
utility <- read.table("T12-4.dat")
head(utility)
util <- utility[, 1:8]
rownames(util) <-utility$V9
head(util)
(1 - cor(util))/2
dd <- as.dist((1 - cor(util))/2)
dd
round(1000 * dd) # (prints more nicely)
dd
round(1000 * dd) # (prints more nicely)
plot(hclust(dd)) # to see a dendrogram of clustered variables
dm.util <- dist(util)
plot(hclust(dm.util)) # to see a dendrogram of clustered companies
utility <- read.table("T12-4.dat")
head(utility)
utility
(1 - cor(util))/2
2+3
utility <- read.table("T12-4.dat")
utility <- read.table("T12-4.dat")
head(utility)
util <- utility[, 1:8]
head(util)
rownames(util) <- utility$V9
head(util)
dm.util <- dist(util)
dim(dm.util)
dm.util
cor(util)
(1 - cor(util))/2
dd <- as.dist((1 - cor(util))/2)
dd
round(1000 * dd) # (prints more nicely)
plot(hclust(dd)) # to see a dendrogram of clustered variables
kmeans(util, center=2)
kmeans(util, center=2)$centers
kmeans(util, center=2)$centers
round(kmeans(util, centers = 2)$centers, 4)
round(kmeans(util, centers = 2)$centers, 2)
kmeans(util, centers = 2)$cluster
kmeans(util, centers = 3)$cluster
out <- kmeans(util, centers = 2)
out$cluster
set.seed(10)
out <- kmeans(util, centers = 2)
out$cluster
set.seed(10)
out <- kmeans(util, centers = 2)
out$cluster
kmeans(util, centers = 2)$size
table(kmeans(util, centers = 2)$cluster)
round(kmeans(util, centers = 5)$centers, 4)
wss <- rep(0, 6)
for (i in 1:6)
{
wss[i] <- sum(kmeans(util, centers = i)$withinss)
}
wss
plot(1:6, wss, type ="b", ylab = "Within-group SS", xlab = "Number of groups")
fit3 <- kmeans(util, centers = 3)
fit2 <- kmeans(util, centers = 2)
?clusplot
library(cluster)
?clusplot
clusplot(util, fit3$cluster, color=TRUE, shade=TRUE, labels=2, lines=0)
clusplot(util, fit2$cluster, color=TRUE, shade=TRUE, labels=2, lines=0)
fit4 <- kmeans(util, cemters=4)
clusplot(util, fit4$cluster, color=T, shade=T, labels=2, lines=0)
fit4 <- kmeans(util, centers=4)
clusplot(util, fit4$cluster, color=T, shade=T, labels=2, lines=0)
fit4 <- kmeans(util, centers=4)
clusplot(util, fit4$cluster, color=T, shade=T, labels=2, lines=0)
head(cereal)
cereal <- read.csv("cereal.csv", header=F)
head(cereal)
row.name <- c("Life", "Grape", "SuperSugar", "SpecialK", "RiceKrisp", "RaisinBran", "Prod19", "Weaties", "Total", "PuffedRice", "SugarCornPops", "SugarSmacks")
col.name <- c("Sl", "Brand", "Protein", "Carb", "Fat", "Calory", "VitA")
colnames(cereal) <- col.name
rownames(cereal) <- row.name
head(cereal)
head(cereal)
cereal <- cereal[,-c(1, 2)] # dropping col 1
head(cereal)
dm.cereal <-dist(cereal)
plot(slc.cereal <- hclust(dm.cereal, method = "single"))
plot(clc.cereal <- hclust(dm.cereal, method = "complete"))
plot(avc.cereal <- hclust(dm.cereal, method = "average"))
wss <- rep(0, 6)
for (i in 1:6)
{
wss[i] <- sum(kmeans(cereal, centers = i)$withinss)
}
wss
wss <- rep(0, 6)
for (i in 1:6)
{
wss[i] <- sum(kmeans(cereal, centers = i)$withinss)
}
wss
plot(1:6, wss, type ="b", ylab = "Within-group SS", xlab = "Number of groups")
wss <- rep(0, 6)
for (i in 1:6)
{
wss[i] <- sum(kmeans(cereal, centers = i)$withinss)
}
wss
plot(1:6, wss, type ="b", ylab = "Within-group SS", xlab = "Number of groups")
fit3 <- kmeans(cereal, centers = 3)
# 2 cluster solution
fit2 <- kmeans(cereal, centers = 2)
# Cluster Plot of first two principal components
library(cluster)
clusplot(cereal, fit3$cluster, color=TRUE, shade=TRUE, labels=2, lines=0)
clusplot(cereal, fit2$cluster, color=TRUE, shade=TRUE, labels=2, lines=0)
fit2 <- kmeans(cereal, centers = 2)
clusplot(cereal, fit2$cluster, color=TRUE, shade=TRUE, labels=2, lines=0)
plot(clc.cereal <- hclust(dm.cereal, method = "complete"))
scale(cereal)
clusplot(scale(cereal), fit$cluster, color=TRUE, shade=TRUE, labels=2, lines=0)
fit <- kmeans(scale(cereal), centers=2)
clusplot(scale(cereal), fit$cluster, color=TRUE, shade=TRUE, labels=2, lines=0)
fit <- kmeans(scale(cereal), centers=2)
clusplot(scale(cereal), fit$cluster, color=TRUE, shade=TRUE, labels=2, lines=0)
fit <- kmeans(scale(cereal), centers=2)
clusplot(scale(cereal), fit$cluster, color=TRUE, shade=TRUE, labels=2, lines=0)
fit <- kmeans(scale(cereal), centers=2)
clusplot(scale(cereal), fit$cluster, color=TRUE, shade=TRUE, labels=2, lines=0)
fit <- kmeans(scale(cereal), centers=2)
clusplot(scale(cereal), fit$cluster, color=TRUE, shade=TRUE, labels=2, lines=0)
gpa <- read.table("admissn.dat")
head(gpa)
gpa2 <- gpa[, c(1:2)]
head(gpa2)
colnames(gpa2) <- c("GPA", "GMAT")
head(gpa2)
fit2 <- kmeans(scale(gpa), centers=2)
clusplot(scale(gpa), fit2$cluster, color=TRUE, shade=TRUE, labels=2, lines=0)
fit3 <- kmeans(scale(gpa), centers=3)
clusplot(scale(gpa), fit3$cluster, color=TRUE, shade=TRUE, labels=2, lines=0)
scale(gpa)
# Now plot the clusters (with raw data)
fit2 <- kmeans(gpa2, centers=2)
clusplot(gpa2, fit2$cluster, color=TRUE, shade=TRUE, labels=2, lines=0)
fit3 <- kmeans(gpa2, centers=3)
clusplot(gpa2, fit3$cluster, color=TRUE, shade=TRUE, labels=2, lines=0)
fit4 <- kmeans(goa2, centers=4)
fit4 <- kmeans(gpa2, centers=4)
clusplot(gpa2, fit4$cluster, color=T, shade=T, labels=2, lines=0)
fit4$cluster
names(fit4)
fit4$cluster
library(mclust)
library(MVA)
library(HSAUR2)
library(cluster)
library(mclust)
library(MVA)
library(HSAUR2)
library(cluster)
2+2
votes <- votes.repub
votes <- cluster::votes.repub
dim(votes)
head(votes)
dm <- dist(votes)
plot(slc <- hclust(dm, method = "single"))
plot(clc <- hclust(dm, method = "complete"))
plot(avc <- hclust(dm, method = "average"))
plot(clc <- hclust(dm, method = "complete"))
votes.repub <- cluster::votes.repub
years <- as.numeric(gsub("X", "", colnames(votes.repub)))
par(las = 2, mar = c(4.5, 3, 3, 2) + 0.1, cex = .8)
# MASS::parcoord(votes.repub, var.label = FALSE, lwd = 1)
matplot(1L:ncol(votes.repub), t(votes.repub), type = "l", col = 1, lty = 1,
axes = F, xlab = "", ylab = "")
axis(1, at = seq_along(years), labels = years)
axis(2)
years
arcsin_transformation <- function(x) asin(x/100)
dend_NA <- votes.repub %>% is.na %>%
dist %>% hclust %>% as.dendrogram %>% ladderize
library(dplyr)
library(dplyr)
dend_NA <- votes.repub %>% is.na %>%
dist %>% hclust %>% as.dendrogram %>% ladderize
dend <- votes.repub %>% arcsin_transformation %>%
dist %>% hclust(method = "com") %>% as.dendrogram %>%
rotate(labels(dend_NA)) %>%
color_branches(k=3)
apply(votes.repub, 2, arcsin_transformation)
votes <- cluster::votes.repub
dim(votes)
head(votes)
years <- as.numeric(gsub("X", "", colnames(votes.repub)))
years <- as.numeric(gsub("X", "", colnames(votes)))
par(las = 2, mar = c(4.5, 3, 3, 2) + 0.1, cex = .8)
# MASS::parcoord(votes.repub, var.label = FALSE, lwd = 1)
matplot(1L:ncol(votes), t(votes), type = "l", col = 1, lty = 1,
axes = F, xlab = "", ylab = "")
axis(1, at = seq_along(years), labels = years)
axis(2)
arcsin_transformation <- function(x) asin(x/100)
# Apply arcsin transformation
votes2 <- apply(votes.repub, 2, arcsin_transformation)
dm <- dist(votes2)
plot(slc <- hclust(dm, method = "single"))
# Single linkage
plot(clc <- hclust(dm, method = "complete"))
plot(avc <- hclust(dm, method = "average"))
votes_pc <- princomp(dm, cor = TRUE)
xlim <- range(votes_pc$scores[,1])
plot(votes_pc$scores[,1:2], type = "n", xlim = xlim, ylim = xlim,
xlab = "PC1", ylab = "PC2")
text(votes_pc$scores[,1:2], labels = lab, cex=0.6)
lab <- cutree(slc, h = 3.8)
text(votes_pc$scores[,1:2], labels = lab, cex=0.6)
plot(cs <- hclust(dm, method = "single"), main = "Single")
kmeans(votes2, center=2)$centers
votes <- cluster::votes.repub
dim(votes)
head(votes)
votes <- na.omit(votes)
dim(votes)
?kmeans
library(mi)
mdf <- missing_data.frame(votes) # warnings about missingness patterns
show(mdf)
summary(mdf)
votes2 <- mi(mdf)
dim(votes2)
votes <- cluster::votes.repub
dim(votes)
head(votes)
mdf <- missing_data.frame(votes) # warnings about missingness patterns
votes2 <- mi(mdf)
dim(votes2)
years <- as.numeric(gsub("X", "", colnames(votes)))
?matplot
years <- as.numeric(gsub("X", "", colnames(votes)))
par(las = 2, mar = c(4.5, 3, 3, 2) + 0.1, cex = .8)
matplot(1L:ncol(votes), t(votes2), type = "l", col = 1, lty = 1,
axes = F, xlab = "", ylab = "")
axis(1, at = seq_along(years), labels = years)
votes2 <- as.matrix(mi(mdf))
votes2 <- mi(mdf)
# See the dimension of the imputed data set
dim(votes2)
arcsin_transformation <- function(x) asin(x/100)
votes2 <- apply(votes2, 2, arcsin_transformation)
class(votes2)
head(votes2)
v3 <- missing_data.frame(votes2)
library(mice)
votes <- cluster::votes.repub
dim(votes)
head(votes)
library(mice)
md.pattern(votes)
tempData <- mice(votes,m=5,maxit=50,meth='pmm',seed=500)
summary(tempData)
summary(votes)
tempData <- mice(votes,m=1,maxit=50,meth='pmm',seed=500)
summary(tempData)
head(tempData)
dim(tempData)
votes2 <- mice(votes,m=1,maxit=50,meth='pmm',seed=500)
head(votes2)
dim(votes2)
arcsin_transformation <- function(x) asin(x/100)
votes2 <- apply(votes2, 2, arcsin_transformation)
votes <- na.omit(votes)
dim(votes)
votes2 <- apply(votes, 2, arcsin_transformation)
dm <- dist(votes2)
plot(slc <- hclust(dm, method = "single"))
# Single linkage
plot(clc <- hclust(dm, method = "complete"))
# Average linkage
plot(avc <- hclust(dm, method = "average"))
kmeans(votes2, center=2)$centers
wss <- rep(0, 6)
for (i in 1:6)
{
wss[i] <- sum(kmeans(votes2, centers = i)$withinss)
}
wss
plot(1:6, wss, type ="b", ylab = "Within-group SS", xlab = "Number of groups")
fit3 <- kmeans(util, centers = 3)
fit3 <- kmeans(votes2, centers = 3)
# 2 cluster solution
fit2 <- kmeans(votes2, centers = 2)
library(cluster)
clusplot(votes2, fit3$cluster, color=TRUE, shade=TRUE, labels=2, lines=0)
prot <- read.table("T15_7_PROTEIN.dat")
prot <- read.table("protein.dat")
dim(protein)
dim(prot)
dm <- dist(prot)
head(prot)
rownames(prot) <- prot$V1
head(prot)
prot <- read.csv("protein.dat", header=TRUE)
head(prot)
prot <- read.csv("protein.dat")
head(prot)
prot <- read.csv("protein.csv", header=T)
head(prot)
rownames(prot) <- prot$Country
dim(prot)
head(prot)
prot <- prot[, -1]
dim(prot)
head(prot)
dm <- dist(prot)
plot(slc <- hclust(dm, method = "single"))
plot(clc <- hclust(dm, method = "complete"))
# Average linkage
plot(avc <- hclust(dm, method = "average"))
wss <- rep(0, 6)
for (i in 1:6)
{
wss[i] <- sum(kmeans(votes2, centers = i)$withinss)
}
wss
plot(1:6, wss, type ="b", ylab = "Within-group SS", xlab = "Number of groups")
wss <- rep(0, 6)
for (i in 1:6)
{
wss[i] <- sum(kmeans(prot, centers = i)$withinss)
}
wss
plot(1:6, wss, type ="b", ylab = "Within-group SS", xlab = "Number of groups")
# K-Means Clustering with 3 clusters
fit3 <- kmeans(prot, centers = 3)
# 2 cluster solution
fit2 <- kmeans(prot, centers = 2)
clusplot(prot, fit3$cluster, color=TRUE, shade=TRUE, labels=2, lines=0)
clusplot(prot, fit2$cluster, color=TRUE, shade=TRUE, labels=2, lines=0)
fit4 <- kmeans(prot, centers=4)
clusplot(prot, fit4$cluster, color=T, shade=T, labels=2, lines=0)
clusplot(scale(prot), fit$cluster, color=TRUE, shade=TRUE, labels=2, lines=0)
fit4 <- kmeans(scale(prot), centers=2)
clusplot(scale(prot), fit$cluster, color=TRUE, shade=TRUE, labels=2, lines=0)
## NOT COVERED
fit <- kmeans(scale(prot), centers=2)
clusplot(scale(prot), fit$cluster, color=TRUE, shade=TRUE, labels=2, lines=0)
## NOT COVERED
dim(prot)
